#!/usr/bin/env bash

###
# Print error into STDERR
###
error() {
    echo "$@" 1>&2
}

###
# Get latest release for a GitHub repository
###
get_latest_release() {
    local repository=$1
    local url="https://api.github.com/repos/${repository}/releases/latest"
    curl --silent "${url}" | \
        grep '"tag_name":' | \
        sed 's/.*"\([^"]\+\)".*/\1/'
}


###
# Update cli53 version
###
update_cli53_version() {
    local version=$1
    local binary="cli53-linux-amd64"
    local vars_file="vars/os/Linux_x86_64.yml"
    local checksum=""
    checksum=$(get_cli53_checksum ${version} ${binary})
    [ -z "${checksum}" ] && exit 1
    update_variable cli53_version ${version} ${vars_file}
    update_variable cli53_binary ${binary} ${vars_file}
    update_variable cli53_checksum "sha256:${checksum}" ${vars_file}
}

###
# Get cli53 binary checksum
###
get_cli53_checksum() {
    local release=$1
    local binary=$2

    local url="https://github.com/barnybug/cli53/releases/download/${release}"
    url="${url}/cli53_${release}_checksums.txt"
    curl -L --silent "${url}" | \
        grep "${binary}" | \
        awk '{ print $1 }'
}

###
# Update aws-vault version
###
update_aws_vault_version() {
    local version=$1
    local binary="aws-vault-linux-amd64"
    local vars_file="vars/os/Linux_x86_64.yml"
    local checksum=""
    checksum=$(get_aws_vault_checksum v${version} ${binary})
    [ -z "${checksum}" ] && exit 1
    update_variable aws_vault_version ${version} ${vars_file}
    update_variable aws_vault_binary ${binary} ${vars_file}
    update_variable aws_vault_checksum "sha256:${checksum}" ${vars_file}
}

###
# Get aws-vault binary checksum
###
get_aws_vault_checksum() {
    local release=$1
    local binary=$2
    local url="https://github.com/99designs/aws-vault"
    url="${url}/releases/download/${release}"
    url="${url}/${binary}"
    curl -L --silent "${url}" | sha256sum | awk '{ print $1 }'
}

###
# Update Ansible variable
###
update_variable() {
    local key=$1
    local value=$2
    local file=$3
    sed -i.save -r "s/^${key}:.*\$/${key}: \"${value}\"/" \
        ${file}
    rm ${file}.save
}

###
# Get latest cli53 version
###
latest_cli53_version() {
    local latest_release=""
    latest_release=$(get_latest_release barnybug/cli53)
    [ -z "${latest_release}" ] && {
        error "Failed to get latest release from GitHub"; return 1;
    }
    echo "${latest_release}"
}

###
# Get latest aws-vault version
###
latest_aws_vault_version() {
    local latest_release=""
    latest_release=$(get_latest_release 99designs/aws-vault)
    [ -z "${latest_release}" ] && {
        error "Failed to get latest release from GitHub"; return 1;
    }
    echo "${latest_release}" | sed 's/^v//'
}

###
# Update all versions
###
update_versions() {
    cli53_version=$(latest_cli53_version)
    echo "Latest cli53 release is ${cli53_version}"
    update_cli53_version ${cli53_version}

    aws_vault_version=$(latest_aws_vault_version)
    echo "Latest aws-vault release is ${aws_vault_version}"
    update_aws_vault_version ${aws_vault_version}
}

set -e

update_versions
